import java.util.*;

public class NumberGuessing {

    // Game Constants
    private static final int MIN_RANGE = 1;
    private static final int MAX_RANGE = 100;
    private static final int MAX_ATTEMPTS = 10;
    private static final int MAX_ROUNDS = 3;

    // ANSI Colors for Styling
    private static final String RESET = "\u001B[0m";
    private static final String RED = "\u001B[31m";
    private static final String GREEN = "\u001B[32m";
    private static final String YELLOW = "\u001B[33m";
    private static final String BLUE = "\u001B[34m";
    private static final String CYAN = "\u001B[36m";

    private static final Scanner scanner = new Scanner(System.in);
    private static final Random random = new Random();

    public static void main(String[] args) {
        int totalScore = 0;

        printMessage(CYAN, "WELCOME TO THE NUMBER GUESSING GAME");
        printMessage(YELLOW, "Total Rounds: " + MAX_ROUNDS);
        printMessage(YELLOW, "Attempts per Round: " + MAX_ATTEMPTS);

        for (int i = 1; i <= MAX_ROUNDS; i++) {
            totalScore += playRound(i);
        }

        printMessage(CYAN, "\nGame Over! Your Total Score = " + totalScore);
        scanner.close();
    }

    
    private static int playRound(int roundNumber) {
        int numberToGuess = random.nextInt(MAX_RANGE - MIN_RANGE + 1) + MIN_RANGE;
        int attempts = 0;

        printMessage(BLUE, "\nRound " + roundNumber + ": Guess the number between " + MIN_RANGE + " and " + MAX_RANGE);

        while (attempts < MAX_ATTEMPTS) {
            int guess = getPlayerGuess();
            attempts++;

            if (guess == numberToGuess) {
                int roundScore = MAX_ATTEMPTS - attempts;
                printMessage(GREEN, "Congrats! Number Guessed Successfully in " + attempts + " attempts. Round Score = " + roundScore);
                return roundScore;
            } else if (guess < numberToGuess) {
                printMessage(RED, "The number is greater than " + guess + ". Attempts Left = " + (MAX_ATTEMPTS - attempts));
            } else {
                printMessage(RED, "The number is less than " + guess + ". Attempts Left = " + (MAX_ATTEMPTS - attempts));
            }
        }

        printMessage(YELLOW, "Rounds Over " + roundNumber + " Failed. The correct number was: " + numberToGuess);
        return 0; // Score is zero if the player fails to guess.
    }

   
    private static int getPlayerGuess() {
        System.out.print("Enter your guess: ");
        while (!scanner.hasNextInt()) {
            printMessage(RED, "Invalid input! Please enter a valid number.");
            scanner.next(); // Clear invalid input
            System.out.print("Enter your guess: ");
        }
        return scanner.nextInt();
    }

    
    private static void printMessage(String color, String message) {
        System.out.println(color + message + RESET);
    }
}
